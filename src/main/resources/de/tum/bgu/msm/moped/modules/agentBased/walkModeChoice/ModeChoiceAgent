//intercept,car,License,kidYes,LogpedestrianAccessibility,distance
coefficientsHBW = [-7.619, -0.139, -0.268, 0.728,0.793,-0.444];
//intercept,LogpedestrianAccessibility,distance
coefficientsHBE = [-2.2809, 0.3428, -1.5023];
//intercept,car1,car2,car3,kidYes,LogpedestrianAccessibility
coefficientsOTHER = [-6.232, -0.899, -1.141, -1.223, 0.191, 0.689];

var calculateHBWProbabilities = function(hh, pp, trip){

    car = hh.getAutos();
    kid = hh.getKids();
    lic = pp.hasDriversLicense();
    travelDistance = trip.getTripDistance();
    activityDensity = hh.getHomeZone().getActivityDensity();

    utilityWalk = coefficientsHBW[0]+coefficientsHBW[1]*car+coefficientsHBW[2]*lic +
                    coefficientsHBW[3]*(kid>0)+coefficientsHBW[4]*Math.log(activityDensity+1)+
                    coefficientsHBW[5]*travelDistance;

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}

var calculateHBEProbabilities = function(hh, trip){

    travelDistance = trip.getTripDistance();
    activityDensity = hh.getHomeZone().getActivityDensity();

    utilityWalk = coefficientsHBE[0]+coefficientsHBE[1]*Math.log(activityDensity+1)+coefficientsHBE[2]*travelDistance;

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}


var calculateOTHERProbabilities = function(hh, trip){

        car = hh.getAutos();
        kid = hh.getKids();
        activityDensity = hh.getHomeZone().getActivityDensity();
    
        utilityWalk = coefficientsOTHER[0]+coefficientsOTHER[1]*(car==1)+coefficientsOTHER[2]*(car==2)+
                        coefficientsOTHER[3]*(car>2)+coefficientsOTHER[4]*(kid>0)+coefficientsOTHER[5]*Math.log(activityDensity+1);
    
        probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);
        //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)

        return probabilityWalk;

}


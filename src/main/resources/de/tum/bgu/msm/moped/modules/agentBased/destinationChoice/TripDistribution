sizeHBWHBE = 0.197;
barrierHBWHBE = -1.14;
interceptHBWHBE = -0.761;
distHasCarHBWHBE = -1.54;
distNoCarHBWHBE = -1.496;

sizeOther = 0.197;
barrierOther = -1.14;
interceptOther = -0.761;
distHasCarOther = -1.54;
distNoCarOther = -1.496;

var calculateHBWHBE = function (travelDistance, sizeVariable, barrierVariable) {
    if(sizeVariable <= 1){
       sizeVariable = sizeVariable+1;
    }
    
    if(travelDistance == 141){
        utility = distHasCarHBWHBE * travelDistance/1000 + sizeHBWHBE * Math.log(sizeVariable) + barrierHBWHBE * barrierVariable/sizeVariable;
    }else{
        utility = interceptHBWHBE + distHasCarHBWHBE * travelDistance/1000 + sizeHBWHBE * Math.log(sizeVariable) + barrierHBWHBE * barrierVariable/sizeVariable;
    }

    probability = Math.exp(utility);

    return probability;
}

var calculateOther = function (travelDistance, sizeVariable, barrierVariable) {
    if(sizeVariable <= 1){
       sizeVariable = sizeVariable+1;
    }
    
    if(travelDistance == 141){
        utility = distHasCarOther * travelDistance/1000 + sizeOther * Math.log(sizeVariable) + barrierOther * barrierVariable/sizeVariable;
    }else{
        utility = interceptOther + distHasCarOther * travelDistance/1000 + sizeOther * Math.log(sizeVariable) + barrierOther * barrierVariable/sizeVariable;
    }

    probability = Math.exp(utility);

    //print(travelDistance + ","+ sizeVariable+ ","+barrierVariable+ ","+utility+ ","+probability)

    return probability;
}




//intercept,distanceKm,car,kid1,kid2,kid2+,LogpedestrianAccessibility,HBE
coefficientsHBW = [-5.798, -0.299, -0.296, 1.099, 1.123, 0.836, 0.559, 0.0];
coefficientsHBE = [-5.798, -0.299, -0.296, 1.099, 1.123, 0.836, 0.559, 0.938];

//intercept,car0,car2,car2+,kidYes,LogpedestrianAccessibility,HBS
coefficientsHBS = [-7.276, 0.945, -0.239, -0.408, 0.184, 0.727, -0.513];
coefficientsHBO = [-7.276, 0.945, -0.239, -0.408, 0.184, 0.727, 0];

//intercept,income2,income3,income4,car0,car2,car2+,kidYes,LogpedestrianAccessibility,NHBW
coefficientsNHBW = [-7.411, -0.205, 0.222, 0.448, 1.375, -0.898, -0.963, -0.162, 0.686, -0.362];
coefficientsNHBO = [-7.411, -0.205, 0.222, 0.448, 1.375, -0.898, -0.963, -0.162, 0.686, 0.0];

//  Income_1	0 to $24,999	0.11635354 -->0 - 10% --> 0 - 18,000
//  Income_2	$25,000 to $34,999	0.07429547 --> 10 - 20%
//  Income_3	$35,000 to $74,999	0.33774552 -->20 -50%
//  Income_4	$75,000+	0.47160547 -->50 - 100%

var calculateHBWProbabilities = function(hh,trip){

    car = hh.getAutos();
    kid = hh.getKids();
    travelDistance = trip.getTripDistance();
    activityDensity = hh.getHomeZone().getPieEmpl()+hh.getHomeZone().getPiePop();
    activityDensity = Math.max(activityDensity,1);

    utilityWalk = coefficientsHBW[0]+coefficientsHBW[1]*travelDistance+coefficientsHBW[2]*(car>0) +
                    coefficientsHBW[3]*(kid==1)+coefficientsHBW[4]*(kid==2)+coefficientsHBW[5]*(kid>2)+
                    coefficientsHBW[6]*Math.log(activityDensity)+coefficientsHBW[7];

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}

var calculateHBEProbabilities = function(hh, trip){

    car = hh.getAutos();
    kid = hh.getKids();
    travelDistance = trip.getTripDistance();
    activityDensity = hh.getHomeZone().getPieEmpl()+hh.getHomeZone().getPiePop();
    activityDensity = Math.max(activityDensity,1);

    utilityWalk = coefficientsHBE[0]+coefficientsHBE[1]*travelDistance+coefficientsHBE[2]*(car>0) +
                    coefficientsHBE[3]*(kid==1)+coefficientsHBE[4]*(kid==2)+coefficientsHBE[5]*(kid>2)+
                    coefficientsHBE[6]*Math.log(activityDensity)+coefficientsHBE[7];

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}

var calculateHBSProbabilities = function(hh, trip){

    car = hh.getAutos();
    kid = hh.getKids();
    activityDensity = hh.getHomeZone().getPieEmpl()+hh.getHomeZone().getPiePop();
    activityDensity = Math.max(activityDensity,1);

    utilityWalk = coefficientsHBS[0]+coefficientsHBS[1]*(car==0)+coefficientsHBS[2]*(car==2) +
                    coefficientsHBS[3]*(car>2)+coefficientsHBS[4]*(kid>0)+
                    coefficientsHBS[5]*Math.log(activityDensity)+coefficientsHBS[6];

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}

var calculateHBOProbabilities = function(hh, trip){

    car = hh.getAutos();
    kid = hh.getKids();

    activityDensity = hh.getHomeZone().getPieEmpl()+hh.getHomeZone().getPiePop();
    activityDensity = Math.max(activityDensity,1);

    utilityWalk = coefficientsHBO[0]+coefficientsHBO[1]*(car==0)+coefficientsHBO[2]*(car==2) +
                    coefficientsHBO[3]*(car>2)+coefficientsHBO[4]*(kid>0)+
                    coefficientsHBO[5]*Math.log(activityDensity)+coefficientsHBO[6];

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}


var calculateNHBWProbabilities = function(hh, trip){

    car = hh.getAutos();
    kid = hh.getKids();
    monthlyIncome = hh.getIncome();
    incomeGroup = 0;
    if (monthlyIncome*12<=18000){
        incomeGroup = 1;
    }else if(monthlyIncome*12<=24000){
        incomeGroup = 2;
    }else if(monthlyIncome*12<=36000){
        incomeGroup = 3;
    }else{
        incomeGroup = 4;
    }
    activityDensity = hh.getHomeZone().getPieEmpl()+hh.getHomeZone().getPiePop();
    activityDensity = Math.max(activityDensity,1);

    utilityWalk = coefficientsNHBW[0]+coefficientsNHBW[1]*(incomeGroup==2)+coefficientsNHBW[2]*(incomeGroup==3) +coefficientsNHBW[3]*(incomeGroup==4)+
                    coefficientsNHBW[4]*(car==0)+coefficientsNHBW[5]*(car==2) +
                    coefficientsNHBW[6]*(car>2)+coefficientsNHBW[7]*(kid>0)+
                    coefficientsNHBW[8]*Math.log(activityDensity)+coefficientsNHBW[9];

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}

var calculateNHBOProbabilities = function(hh, trip){

    car = hh.getAutos();
    kid = hh.getKids();
    monthlyIncome = hh.getIncome();
    incomeGroup = 0;
    if (monthlyIncome*12<=18000){
        incomeGroup = 1;
    }else if(monthlyIncome*12<=24000){
        incomeGroup = 2;
    }else if(monthlyIncome*12<=36000){
        incomeGroup = 3;
    }else{
        incomeGroup = 4;
    }
    activityDensity = hh.getHomeZone().getPieEmpl()+hh.getHomeZone().getPiePop();
    activityDensity = Math.max(activityDensity,1);

    utilityWalk = coefficientsNHBO[0]+coefficientsNHBO[1]*(incomeGroup==2)+coefficientsNHBO[2]*(incomeGroup==3)+coefficientsNHBO[3]*(incomeGroup==4) +
                    coefficientsNHBO[4]*(car==0)+coefficientsNHBO[5]*(car==2) +
                    coefficientsNHBO[6]*(car>2)+coefficientsNHBO[7]*(kid>0)+
                    coefficientsNHBO[8]*Math.log(activityDensity)+coefficientsNHBO[9];

    probabilityWalk = Math.exp(utilityWalk) / (Math.exp(utilityWalk) + 1);

    //print(car + ";" + kid + ";" +activityDensity + ";" + utilityWalk + ";" + probabilityWalk)
    return probabilityWalk;
}



